class Solution {
    public int trap(int[] a) {
        int count = 0;
        if(a.length <=2) {
            return 0;
        }
        for(int i =0; i<a.length; i++){
            int leftMax = findLeftMax(a,i);
            int rightMax = findRightMax(a,i);

            int minOfTwo = Math.min(leftMax, rightMax);

            count = count + minOfTwo - a[i];

        }
        return count;
    }




    static int findLeftMax (int a[], int i){
        int leftMax = 0;
        for(int k = i; k>=0; k--){
            if(a[k] > leftMax){
                leftMax = a[k];
            }
        }
        return leftMax;
    }

    static int findRightMax (int a[], int i){
        int rightMax = 0;
        for(int k = i; k<a.length; k++){
            if(a[k] > rightMax){
                rightMax = a[k];
            }
        }
        return rightMax;
    }
    
}
